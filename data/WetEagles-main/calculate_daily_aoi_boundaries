"""
code written under Google Colab Notebook environment, customised initialization process, adjust based on setup
"""
from google.colab import drive
drive.mount('/content/gdrive')
import pandas as pd
file_path = '/content/gdrive/My Drive/all point data.csv'
df = pd.read_csv(file_path)
df['date'] = pd.to_datetime(df['t2_'])
df_sorted = df.sort_values(by='date')
df_sorted.to_csv('/content/gdrive/My Drive/sorted_by_time_all_point.csv', index = False)


import pandas as pd
file_path = '/content/gdrive/My Drive/sorted_by_time_all_point.csv'
df = pd.read_csv(file_path)
#rearrange the date column into datetime format for extracting day, month and year for each point 
df['time'] = pd.to_datetime(df['t2_'])
df['day'] = df['time'].dt.day
df['month'] = df['time'].dt.month
df['year'] = df['time'].dt.year
"""
groups the dataframe by day, month and year
then computes the maximum and minimum values for 'x2_'(longitude) and 'y2_' (latitude)
the results is stored in a new dataframe called 'daily_coordinates_result'
"""
daily_coordinates_result = df.groupby(['day', 'month', 'year']).agg({
    'x2_': ['min', 'max'],
    'y2_': ['min', 'max']
}).reset_index()
#the new dataframe is then sorted by the date nd saved into a new CSV file
daily_coordinates_result = daily_coordinates_result.sort_values(by=['year', 'month', 'day']).reset_index(drop=True)
#customised final step to save the results, adjust based on own setup
daily_coordinates_result.to_csv('/content/gdrive/My Drive/max_min_latitude_longititude_sorted_by_time.csv')

"""the following code are optional since it is mainly for renaming the columns for easier access to the CSV file
and functions to double check the values for coordinates
"""
df.rename(columns={'x2_':'min_long'}, inplace=True)
df.rename(columns={'x2_.1':'max_long'}, inplace=True)
df.rename(columns={'y2_':'min_lat'}, inplace=True)
df.rename(columns={'y2_.1':'max_lat'}, inplace=True)
condition1 = (df['min_long'] != 'min')
condition2 = (df['max_long'] != 'max')
condition3 = (df['min_lat'] != 'min')
condition4 = (df['max_lat'] != 'max')
final_condition = condition1 & condition2 &condition3 & condition4
df = df[final_condition]
df.to_csv(file_path, index=False)
